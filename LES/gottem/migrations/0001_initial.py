# Generated by Django 3.0.3 on 2020-04-22 20:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilizador',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('data_de_nascimento', models.DateField(blank=True, db_column='Data_de_nascimento', null=True)),
                ('numero_telemovel', models.IntegerField(blank=True, db_column='Numero_telemovel', null=True)),
                ('cartão_cidadão', models.IntegerField(blank=True, db_column='Cartão_cidadão', null=True)),
                ('deficiencias', models.CharField(blank=True, db_column='Deficiencias', max_length=255, null=True)),
                ('permitir_localização', models.IntegerField(blank=True, db_column='Permitir_localização', null=True)),
                ('utilizar_dados_pessoais', models.IntegerField(blank=True, db_column='Utilizar_dados_pessoais', null=True)),
                ('tema_do_website', models.IntegerField(blank=True, db_column='Tema_do_website', null=True)),
                ('user_type', models.IntegerField(db_column='User_type')),
                ('daltonico', models.IntegerField(blank=True, db_column='Daltonico', null=True)),
                ('validado', models.IntegerField(db_column='Validado')),
                ('check_in_state', models.IntegerField(db_column='Check_in_state')),
            ],
            options={
                'db_table': 'utilizador',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('descrição', models.CharField(blank=True, db_column='Descrição', max_length=255, null=True)),
                ('duração', models.IntegerField(blank=True, db_column='Duração', null=True)),
                ('limite_de_participantes', models.IntegerField(blank=True, db_column='Limite_de_participantes', null=True)),
                ('validada', models.IntegerField(blank=True, db_column='Validada', null=True)),
                ('tipo_atividade', models.CharField(blank=True, db_column='Tipo_atividade', max_length=255, null=True)),
                ('public_alvo', models.CharField(blank=True, db_column='Public_alvo', max_length=255, null=True)),
            ],
            options={
                'db_table': 'atividade',
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('localização', models.CharField(blank=True, db_column='Localização', max_length=255, null=True)),
                ('contacto', models.IntegerField(blank=True, db_column='Contacto', null=True)),
            ],
            options={
                'db_table': 'campus',
            },
        ),
        migrations.CreateModel(
            name='DiaAberto',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('titulo', models.CharField(blank=True, db_column='Titulo', max_length=255, null=True)),
                ('descrição', models.CharField(blank=True, db_column='Descrição', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('contacto', models.IntegerField(blank=True, db_column='Contacto', null=True)),
                ('data_inicio', models.DateField(blank=True, db_column='Data_inicio', null=True)),
                ('data_fim', models.DateField(blank=True, db_column='Data_fim', null=True)),
                ('limite_de_inscrição_atividades', models.DateField(blank=True, db_column='Limite_de_inscrição_atividades', null=True)),
                ('limite_de_inscrição_participantes', models.DateField(blank=True, db_column='Limite_de_inscrição_participantes', null=True)),
            ],
            options={
                'db_table': 'dia aberto',
            },
        ),
        migrations.CreateModel(
            name='Edicifio',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('numero_edificio', models.IntegerField(blank=True, db_column='Numero edificio', null=True)),
            ],
            options={
                'db_table': 'edicifio',
            },
        ),
        migrations.CreateModel(
            name='Ementa',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dia', models.DateField(blank=True, db_column='Dia', null=True)),
                ('preço_economico_aluno', models.FloatField(blank=True, db_column='Preço_economico_aluno', null=True)),
                ('preço_normal_aluno', models.FloatField(blank=True, db_column='Preço_normal_aluno', null=True)),
                ('preço_economico_outro', models.FloatField(blank=True, db_column='Preço_economico_outro', null=True)),
                ('preço_outro', models.FloatField(blank=True, db_column='Preço_outro', null=True)),
            ],
            options={
                'db_table': 'ementa',
            },
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('morada', models.CharField(blank=True, db_column='Morada', max_length=255, null=True)),
                ('zip', models.IntegerField(blank=True, db_column='Zip', null=True)),
                ('contacto', models.IntegerField(blank=True, db_column='Contacto', null=True)),
                ('localidade', models.CharField(blank=True, db_column='Localidade', max_length=255, null=True)),
            ],
            options={
                'db_table': 'escola',
            },
        ),
        migrations.CreateModel(
            name='GestoDePerfil',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('validação', models.IntegerField(blank=True, db_column='Validação', null=True)),
            ],
            options={
                'db_table': 'gestão de perfil',
            },
        ),
        migrations.CreateModel(
            name='Horario',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('hora_de_partida', models.TimeField(blank=True, db_column='Hora_de_partida', null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
            ],
            options={
                'db_table': 'horario',
            },
        ),
        migrations.CreateModel(
            name='Inscrio',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dia', models.DateField(blank=True, db_column='Dia', null=True)),
                ('escolaid', models.ForeignKey(blank=True, db_column='EscolaID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Escola')),
            ],
            options={
                'db_table': 'inscrição',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
            ],
            options={
                'db_table': 'material',
            },
        ),
        migrations.CreateModel(
            name='RegistoHorrio',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('hora_inicio', models.TimeField(blank=True, db_column='Hora_inicio', null=True)),
                ('hora_fim', models.TimeField(blank=True, db_column='Hora_fim', null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
            ],
            options={
                'db_table': 'registo horário',
            },
        ),
        migrations.CreateModel(
            name='Sesso',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('hora_de_inicio', models.TimeField(blank=True, db_column='Hora_de inicio', null=True)),
            ],
            options={
                'db_table': 'sessão',
            },
        ),
        migrations.CreateModel(
            name='SessoAtividade',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Atividade')),
                ('sessãoid', models.ForeignKey(db_column='SessãoID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Sesso')),
            ],
            options={
                'db_table': 'sessão-atividade',
            },
        ),
        migrations.CreateModel(
            name='SessoAtividadeInscrio',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('num_alunos', models.IntegerField(blank=True, db_column='Num_alunos', null=True)),
                ('inscriçãoid', models.ForeignKey(db_column='InscriçãoID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Inscrio')),
                ('sessão_atividadeid', models.ForeignKey(db_column='Sessão-AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.SessoAtividade')),
            ],
            options={
                'db_table': 'sessão-atividade-inscrição',
            },
        ),
        migrations.CreateModel(
            name='Tarefa',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('descrição', models.CharField(blank=True, db_column='Descrição', max_length=255, null=True)),
                ('localização_do_grupo', models.CharField(blank=True, db_column='Localização do grupo', max_length=255, null=True)),
                ('destino', models.CharField(blank=True, db_column='Destino', max_length=255, null=True)),
                ('horário', models.TimeField(blank=True, db_column='Horário', null=True)),
                ('tarefatransporte', models.IntegerField(blank=True, db_column='TarefaTransporte', null=True)),
                ('sessão_atividade_inscriçãoid_destino', models.ForeignKey(blank=True, db_column='Sessão-Atividade-InscriçãoID_Destino', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gottem.SessoAtividadeInscrio')),
                ('sessão_atividade_inscriçãoid_origem', models.ForeignKey(db_column='Sessão-Atividade-InscriçãoID_Origem', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gottem.SessoAtividadeInscrio')),
                ('utilizadorid', models.ForeignKey(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tarefa',
            },
        ),
        migrations.CreateModel(
            name='Temtica',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
            ],
            options={
                'db_table': 'temática',
            },
        ),
        migrations.CreateModel(
            name='Transporte',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('hora_de_chegada', models.DateField(blank=True, db_column='Hora_de_chegada', null=True)),
                ('hora_de_partida', models.DateField(blank=True, db_column='Hora_de_partida', null=True)),
                ('tipo_de_transporte', models.CharField(blank=True, db_column='Tipo_de_transporte', max_length=255, null=True)),
                ('capacidade', models.IntegerField(blank=True, db_column='Capacidade', null=True)),
            ],
            options={
                'db_table': 'transporte',
            },
        ),
        migrations.CreateModel(
            name='TransporteUniversitrioHorario',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('origem', models.CharField(blank=True, db_column='Origem', max_length=255, null=True)),
                ('destino', models.CharField(blank=True, db_column='Destino', max_length=255, null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('horarioid', models.ForeignKey(db_column='HorarioID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Horario')),
                ('transporteid', models.ForeignKey(db_column='TransporteID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Transporte')),
            ],
            options={
                'db_table': 'transporte_universitário-horario',
            },
        ),
        migrations.CreateModel(
            name='UnidadeOrgnica',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('campusid', models.ForeignKey(db_column='CampusID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Campus')),
            ],
            options={
                'db_table': 'unidade orgânica',
            },
        ),
        migrations.CreateModel(
            name='Prato',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('tipo', models.CharField(blank=True, db_column='Tipo', max_length=255, null=True)),
                ('descriçao', models.CharField(blank=True, db_column='Descriçao', max_length=255, null=True)),
                ('ementaid', models.ForeignKey(db_column='EmentaID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Ementa')),
            ],
            options={
                'db_table': 'prato',
            },
        ),
        migrations.CreateModel(
            name='Participanteinfo',
            fields=[
                ('participanteinfoid', models.AutoField(db_column='ParticipanteInfoID', primary_key=True, serialize=False)),
                ('ano_escolar', models.IntegerField(db_column='Ano escolar')),
                ('area', models.CharField(blank=True, db_column='Area', max_length=255, null=True)),
                ('checkin_state', models.IntegerField(db_column='Checkin_state')),
                ('participante_type', models.IntegerField(blank=True, db_column='Participante_type', null=True)),
                ('total_de_participantes', models.IntegerField(blank=True, db_column='Total_de_participantes', null=True)),
                ('total_de_professores', models.IntegerField(blank=True, db_column='Total_de_professores', null=True)),
                ('turma', models.CharField(blank=True, db_column='Turma', max_length=255, null=True)),
                ('autorização', models.IntegerField(blank=True, db_column='Autorização', null=True)),
                ('ficheiro_autorização', models.CharField(blank=True, db_column='Ficheiro_autorização', max_length=255, null=True)),
                ('acompanhates', models.IntegerField(blank=True, db_column='Acompanhates', null=True)),
                ('tipoparticipante', models.CharField(blank=True, db_column='TipoParticipante', max_length=255, null=True)),
                ('utilizadorid', models.ForeignKey(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'participanteinfo',
            },
        ),
        migrations.CreateModel(
            name='Notificaes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('conteudo', models.CharField(blank=True, db_column='Conteudo', max_length=255, null=True)),
                ('hora_envio', models.TimeField(blank=True, db_column='Hora_envio', null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('prioridade', models.IntegerField(blank=True, db_column='Prioridade', null=True)),
                ('assunto', models.CharField(blank=True, db_column='Assunto', max_length=255, null=True)),
                ('utilizadorid_envia', models.ForeignKey(db_column='UtilizadorID_Envia', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('utilizadorid_recebe', models.ForeignKey(db_column='UtilizadorID_Recebe', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notificações',
            },
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('andar', models.IntegerField(blank=True, db_column='Andar', null=True)),
                ('sala', models.IntegerField(blank=True, db_column='Sala', null=True)),
                ('descriçao', models.CharField(blank=True, db_column='Descriçao', max_length=255, null=True)),
                ('indoor', models.IntegerField(blank=True, db_column='Indoor', null=True)),
                ('edicifioid', models.ForeignKey(db_column='EdicifioID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Edicifio')),
            ],
            options={
                'db_table': 'local',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('unidade_orgânicaid', models.ForeignKey(db_column='Unidade OrgânicaID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.UnidadeOrgnica')),
            ],
            options={
                'db_table': 'departamento',
            },
        ),
        migrations.CreateModel(
            name='AtividadeTematica',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Atividade')),
                ('temáticaid', models.ForeignKey(db_column='TemáticaID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Temtica')),
            ],
            options={
                'db_table': 'atividade-tematica',
            },
        ),
        migrations.CreateModel(
            name='AtividadeMaterial',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quantidade', models.IntegerField(blank=True, db_column='Quantidade', null=True)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Atividade')),
                ('materialid', models.ForeignKey(db_column='MaterialID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Material')),
            ],
            options={
                'db_table': 'atividade-material',
            },
        ),
        migrations.AddField(
            model_name='atividade',
            name='localid',
            field=models.ForeignKey(db_column='LocalID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Local'),
        ),
        migrations.AddField(
            model_name='atividade',
            name='unidadeorganicaid',
            field=models.ForeignKey(db_column='UnidadeOrganicaID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.UnidadeOrgnica'),
        ),
        migrations.AddField(
            model_name='atividade',
            name='utilizadorid',
            field=models.ForeignKey(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='departamentoid',
            field=models.ForeignKey(blank=True, db_column='DepartamentoID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Departamento'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='gestão_de_perfilid',
            field=models.ForeignKey(db_column='Gestão de PerfilID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.GestoDePerfil'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='inscriçãoid',
            field=models.ForeignKey(blank=True, db_column='InscriçãoID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Inscrio'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='registo_horárioid',
            field=models.ForeignKey(blank=True, db_column='Registo HorárioID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.RegistoHorrio'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='unidade_orgânicaid',
            field=models.ForeignKey(blank=True, db_column='Unidade OrgânicaID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.UnidadeOrgnica'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='UtilizadorTransporte',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('transporteid', models.ForeignKey(db_column='TransporteID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Transporte')),
            ],
            options={
                'db_table': 'utilizador_transporte',
                'unique_together': {('utilizadorid', 'transporteid')},
            },
        ),
        migrations.CreateModel(
            name='UtilizadorTarefa',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tarefaid', models.ForeignKey(db_column='TarefaID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Tarefa')),
            ],
            options={
                'db_table': 'utilizador_tarefa',
                'unique_together': {('utilizadorid', 'tarefaid')},
            },
        ),
        migrations.CreateModel(
            name='UtilizadorEmenta',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ementaid', models.ForeignKey(db_column='EmentaID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Ementa')),
            ],
            options={
                'db_table': 'utilizador_ementa',
                'unique_together': {('utilizadorid', 'ementaid')},
            },
        ),
        migrations.CreateModel(
            name='UtilizadorAtividade',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Atividade')),
            ],
            options={
                'db_table': 'utilizador_atividade',
                'unique_together': {('utilizadorid', 'atividadeid')},
            },
        ),
        migrations.CreateModel(
            name='TransporteUniversitrioHorarioInscrio',
            fields=[
                ('transporte_universitário_horarioid', models.OneToOneField(db_column='Transporte_Universitário-HorarioID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gottem.TransporteUniversitrioHorario')),
                ('inscriçãoid', models.ForeignKey(db_column='InscriçãoID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Inscrio')),
            ],
            options={
                'db_table': 'transporte_universitário-horario_inscrição',
                'unique_together': {('transporte_universitário_horarioid', 'inscriçãoid')},
            },
        ),
        migrations.CreateModel(
            name='TarefaSessoAtividade',
            fields=[
                ('tarefaid', models.OneToOneField(db_column='TarefaID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gottem.Tarefa')),
                ('sessão_atividadeid', models.ForeignKey(db_column='Sessão-AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.SessoAtividade')),
            ],
            options={
                'db_table': 'tarefa_sessão-atividade',
                'unique_together': {('tarefaid', 'sessão_atividadeid')},
            },
        ),
        migrations.CreateModel(
            name='InscrioEmenta',
            fields=[
                ('inscriçãoid', models.OneToOneField(db_column='InscriçãoID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gottem.Inscrio')),
                ('ementaid', models.ForeignKey(db_column='EmentaID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Ementa')),
            ],
            options={
                'db_table': 'inscrição_ementa',
                'unique_together': {('inscriçãoid', 'ementaid')},
            },
        ),
        migrations.CreateModel(
            name='DiaAbertoUtilizador',
            fields=[
                ('dia_abertoid', models.OneToOneField(db_column='Dia AbertoID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gottem.DiaAberto')),
                ('utilizadorid', models.ForeignKey(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dia aberto_utilizador',
                'unique_together': {('dia_abertoid', 'utilizadorid')},
            },
        ),
        migrations.CreateModel(
            name='AtividadeDepartamento',
            fields=[
                ('atividadeid', models.OneToOneField(db_column='AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gottem.Atividade')),
                ('departamentoid', models.ForeignKey(db_column='DepartamentoID', on_delete=django.db.models.deletion.DO_NOTHING, to='gottem.Departamento')),
            ],
            options={
                'db_table': 'atividade_departamento',
                'unique_together': {('atividadeid', 'departamentoid')},
            },
        ),
    ]
