# Generated by Django 3.0.3 on 2020-06-27 18:23

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Utilizador',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True, unique=True)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('data_de_nascimento', models.DateField(blank=True, db_column='Data_de_nascimento', null=True)),
                ('numero_telemovel', models.IntegerField(blank=True, db_column='Numero_telemovel', null=True)),
                ('cartão_cidadão', models.IntegerField(blank=True, db_column='Cartão_cidadão', null=True)),
                ('deficiencias', models.CharField(blank=True, db_column='Deficiencias', max_length=255, null=True)),
                ('permitir_localização', models.IntegerField(blank=True, db_column='Permitir_localização', null=True)),
                ('utilizar_dados_pessoais', models.IntegerField(blank=True, db_column='Utilizar_dados_pessoais', null=True)),
                ('tema_do_website', models.IntegerField(blank=True, db_column='Tema_do_website', null=True)),
                ('user_type', models.IntegerField(db_column='User_type')),
                ('daltonico', models.IntegerField(blank=True, db_column='Daltonico', null=True)),
                ('validado', models.IntegerField(db_column='Validado')),
                ('password_reset_url', models.CharField(blank=True, db_column='Password_reset_url', max_length=500, null=True)),
                ('password', models.CharField(db_column='Password', max_length=500)),
            ],
            options={
                'db_table': 'utilizador',
            },
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('descricao', models.CharField(blank=True, db_column='Descricao', max_length=255, null=True)),
                ('duracao', models.IntegerField(blank=True, db_column='Duracao', null=True)),
                ('limite_de_participantes', models.IntegerField(blank=True, db_column='Limite_de_participantes', null=True)),
                ('validada', models.IntegerField(blank=True, db_column='Validada', null=True)),
                ('tipo_atividade', models.CharField(blank=True, db_column='Tipo_atividade', max_length=255, null=True)),
                ('public_alvo', models.CharField(blank=True, db_column='Public_alvo', max_length=255, null=True)),
                ('editavel', models.BooleanField(blank=True, db_column='Editavel', null=True)),
                ('num_colaboradores', models.IntegerField(blank=True, db_column='Num_Colaboradores', null=True)),
            ],
            options={
                'db_table': 'atividade',
                'permissions': [('validates_atividade', 'Can validate atividade'), ('atribuir_local', 'Can atribuir local da atividade'), ('alterar_local', 'Can alterar local da atividade')],
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('localizacao', models.CharField(blank=True, db_column='Localizacao', max_length=255, null=True)),
                ('contacto', models.CharField(blank=True, db_column='Contacto', max_length=255, null=True)),
            ],
            options={
                'db_table': 'campus',
            },
        ),
        migrations.CreateModel(
            name='DiaAberto',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('titulo', models.CharField(blank=True, db_column='Titulo', max_length=255, null=True)),
                ('descricao', models.CharField(blank=True, db_column='Descricao', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('contacto', models.IntegerField(blank=True, db_column='Contacto', null=True)),
                ('data_inicio', models.DateField(blank=True, db_column='Data_inicio', null=True)),
                ('data_fim', models.DateField(blank=True, db_column='Data_fim', null=True)),
                ('data_inicio_inscricao', models.DateField(blank=True, db_column='Data_inicio_inscricao', null=True)),
                ('data_fim_inscricao', models.DateField(blank=True, db_column='Data_fim_inscricao', null=True)),
                ('data_inicio_propor_atividades', models.DateField(blank=True, db_column='Data_inicio_propor_atividades', null=True)),
                ('data_fim_propor_atividades', models.DateField(blank=True, db_column='Data_fim_propor_atividades', null=True)),
                ('preco_aluno', models.FloatField(blank=True, db_column='Preco_aluno', null=True)),
                ('preco_professor', models.FloatField(blank=True, db_column='Preco_professor', null=True)),
            ],
            options={
                'db_table': 'dia_aberto',
            },
        ),
        migrations.CreateModel(
            name='Edificio',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('num_edificio', models.IntegerField(blank=True, db_column='Num_edificio', null=True)),
                ('nome_edificio', models.CharField(blank=True, db_column='Nome_edificio', max_length=255, null=True)),
                ('campusid', models.ForeignKey(blank=True, db_column='CampusID', null=True, on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Campus')),
            ],
            options={
                'db_table': 'edicifio',
            },
        ),
        migrations.CreateModel(
            name='Ementa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.DateField(blank=True, db_column='Dia', null=True)),
            ],
            options={
                'db_table': 'ementa',
            },
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('morada', models.CharField(blank=True, db_column='Morada', max_length=255, null=True)),
                ('zip', models.IntegerField(blank=True, db_column='Zip', null=True)),
                ('contacto', models.IntegerField(blank=True, db_column='Contacto', null=True)),
                ('localidade', models.CharField(blank=True, db_column='Localidade', max_length=255, null=True)),
            ],
            options={
                'db_table': 'escola',
            },
        ),
        migrations.CreateModel(
            name='GestoDePerfil',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('validação', models.IntegerField(blank=True, db_column='Validação', null=True)),
            ],
            options={
                'db_table': 'gestão de perfil',
            },
        ),
        migrations.CreateModel(
            name='HorarioTransporte',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('hora_de_partida', models.TimeField(blank=True, db_column='Hora_de_partida', null=True)),
                ('hora_de_chegada', models.TimeField(blank=True, db_column='Hora_de_chegada', null=True)),
            ],
            options={
                'db_table': 'horario',
            },
        ),
        migrations.CreateModel(
            name='Inscricao',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dia', models.DateField(blank=True, db_column='Dia', null=True)),
                ('escolaid', models.ForeignKey(blank=True, db_column='EscolaID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Escola')),
            ],
            options={
                'db_table': 'inscricao',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
            ],
            options={
                'db_table': 'material',
            },
        ),
        migrations.CreateModel(
            name='RegistoHorrio',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('hora_inicio', models.TimeField(blank=True, db_column='Hora_inicio', null=True)),
                ('hora_fim', models.TimeField(blank=True, db_column='Hora_fim', null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
            ],
            options={
                'db_table': 'registo horário',
            },
        ),
        migrations.CreateModel(
            name='Rota',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('origem', models.CharField(blank=True, db_column='Origem', max_length=255, null=True)),
                ('destino', models.CharField(blank=True, db_column='Destino', max_length=255, null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('horarioid', models.ForeignKey(blank=True, db_column='HorarioID', null=True, on_delete=django.db.models.deletion.CASCADE, to='utilizadores.HorarioTransporte')),
            ],
            options={
                'db_table': 'transporte_universitario_horario',
            },
        ),
        migrations.CreateModel(
            name='Sessao',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('hora_de_inicio', models.TimeField(blank=True, db_column='Hora_de_inicio', null=True)),
            ],
            options={
                'db_table': 'sessao',
            },
        ),
        migrations.CreateModel(
            name='SessaoAtividade',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Atividade')),
                ('sessaoid', models.ForeignKey(db_column='SessaoID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Sessao')),
            ],
            options={
                'db_table': 'sessao_atividade',
            },
        ),
        migrations.CreateModel(
            name='Tarefa',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('descricao', models.CharField(blank=True, db_column='Descricao', max_length=255, null=True)),
                ('tipoTarefa', models.CharField(blank=True, db_column='TipoTarefa', max_length=255, null=True)),
                ('origem', models.CharField(blank=True, db_column='Origem', max_length=255, null=True)),
                ('destino', models.CharField(blank=True, db_column='Destino', max_length=255, null=True)),
                ('horario', models.TimeField(blank=True, db_column='Horario', null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('estado', models.BooleanField(blank=True, db_column='Estado', null=True)),
                ('colaboradores', models.ManyToManyField(related_name='tarefa_colaborador', to=settings.AUTH_USER_MODEL)),
                ('sessao_atividadeid', models.ForeignKey(blank=True, db_column='SessaoAtividadeID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TarefaSessaoAtividade', to='utilizadores.SessaoAtividade')),
                ('sessao_atividadeid_destino', models.ForeignKey(blank=True, db_column='Sessao_AtividadeID_Destino', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='destino', to='utilizadores.SessaoAtividade')),
                ('sessao_atividadeid_origem', models.ForeignKey(blank=True, db_column='Sessao_AtividadeID_Origem', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='origem', to='utilizadores.SessaoAtividade')),
                ('utilizadorid', models.ForeignKey(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, related_name='tarefa_coordenador', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tarefa',
                'permissions': [('assign_tarefa', 'Can assign a tarefa to a colaborador '), ('remove_colab_from_tarefa', 'Can remove a colaborador from a tarefa')],
            },
        ),
        migrations.CreateModel(
            name='Tematica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tematica',
            },
        ),
        migrations.CreateModel(
            name='Transporte',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tipo_transporte', models.CharField(blank=True, db_column='Tipo_de_transporte', max_length=255, null=True)),
                ('capacidade', models.IntegerField(blank=True, db_column='Capacidade', null=True)),
            ],
            options={
                'db_table': 'transporte',
            },
        ),
        migrations.CreateModel(
            name='UnidadeOrganica',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
            ],
            options={
                'db_table': 'unidade_organica',
            },
        ),
        migrations.CreateModel(
            name='SessaoAtividadeInscricao',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('num_alunos', models.IntegerField(blank=True, db_column='Num_alunos', null=True)),
                ('inscricaoid', models.ForeignKey(db_column='InscricaoID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Inscricao')),
                ('sessao_atividadeid', models.ForeignKey(db_column='Sessao_AtividadeID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.SessaoAtividade')),
            ],
            options={
                'db_table': 'sessao_atividade_inscricao',
            },
        ),
        migrations.CreateModel(
            name='Rota_Inscricao',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('num_passageiros', models.IntegerField(blank=True, db_column='Num_passageiros', null=True)),
                ('inscricaoid', models.ForeignKey(blank=True, db_column='InscricaoID', null=True, on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Inscricao')),
                ('rotaid', models.ForeignKey(blank=True, db_column='Transporte_Universitario_HorarioID', null=True, on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Rota')),
            ],
            options={
                'db_table': 'transporte_universitario_horario_inscricao',
            },
        ),
        migrations.AddField(
            model_name='rota',
            name='transporteid',
            field=models.ForeignKey(db_column='TransporteID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Transporte'),
        ),
        migrations.CreateModel(
            name='Prato',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('tipo', models.CharField(blank=True, db_column='Tipo', max_length=255, null=True)),
                ('descricao', models.CharField(blank=True, db_column='Descricao', max_length=255, null=True)),
                ('ementaid', models.ForeignKey(db_column='EmentaID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Ementa')),
            ],
            options={
                'db_table': 'prato',
            },
        ),
        migrations.CreateModel(
            name='Participanteinfo',
            fields=[
                ('participanteinfoid', models.AutoField(db_column='ParticipanteInfoID', primary_key=True, serialize=False)),
                ('ano_escolar', models.IntegerField(db_column='Ano escolar')),
                ('area', models.CharField(blank=True, db_column='Area', max_length=255, null=True)),
                ('checkin_state', models.IntegerField(db_column='Checkin_state')),
                ('participante_type', models.IntegerField(blank=True, db_column='Participante_type', null=True)),
                ('total_de_participantes', models.IntegerField(blank=True, db_column='Total_de_participantes', null=True)),
                ('total_de_professores', models.IntegerField(blank=True, db_column='Total_de_professores', null=True)),
                ('turma', models.CharField(blank=True, db_column='Turma', max_length=255, null=True)),
                ('autorização', models.IntegerField(blank=True, db_column='Autorização', null=True)),
                ('ficheiro_autorização', models.CharField(blank=True, db_column='Ficheiro_autorização', max_length=255, null=True)),
                ('acompanhates', models.IntegerField(blank=True, db_column='Acompanhates', null=True)),
                ('tipoparticipante', models.CharField(blank=True, db_column='TipoParticipante', max_length=255, null=True)),
                ('utilizadorid', models.ForeignKey(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'participanteinfo',
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('conteudo', models.CharField(blank=True, db_column='Conteudo', max_length=255, null=True)),
                ('hora_envio', models.TimeField(blank=True, db_column='Hora_envio', default=datetime.datetime.now, null=True)),
                ('data', models.DateField(blank=True, db_column='Data', default=django.utils.timezone.now, null=True)),
                ('prioridade', models.IntegerField(blank=True, db_column='Prioridade', null=True)),
                ('assunto', models.CharField(blank=True, db_column='Assunto', max_length=255, null=True)),
                ('visto', models.BooleanField(db_column='Visto', default=0)),
                ('utilizadorid_envia', models.ForeignKey(db_column='UtilizadorID_Envia', on_delete=django.db.models.deletion.DO_NOTHING, related_name='idEnvia', to=settings.AUTH_USER_MODEL)),
                ('utilizadorid_recebe', models.ForeignKey(blank=True, db_column='UtilizadorID_Recebe', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='idRecebe', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notificações',
            },
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('andar', models.IntegerField(blank=True, db_column='Andar', null=True)),
                ('sala', models.CharField(blank=True, db_column='Sala', max_length=255, null=True)),
                ('descricao', models.CharField(blank=True, db_column='Descricao', max_length=255, null=True)),
                ('indoor', models.BooleanField(blank=True, db_column='Indoor', null=True)),
                ('mapa_sala', models.ImageField(blank=True, null=True, upload_to='mapas_salas')),
                ('nome_local_exterior', models.CharField(blank=True, db_column='nome_local_exterior', max_length=255, null=True)),
                ('campusid', models.ForeignKey(blank=True, db_column='CampusID', null=True, on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Campus')),
                ('edicifioid', models.ForeignKey(blank=True, db_column='EdicifioID', null=True, on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Edificio')),
            ],
            options={
                'db_table': 'local',
            },
        ),
        migrations.CreateModel(
            name='InscricaoTarefa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inscricaoid', models.ForeignKey(blank=True, db_column='InscricaoID', null=True, on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Inscricao')),
                ('tarefaid', models.ForeignKey(blank=True, db_column='TarefaID', null=True, on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Tarefa')),
            ],
            options={
                'db_table': 'inscricao_tarefa',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('unidade_organicaid', models.ForeignKey(db_column='Unidade_OrganicaID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.UnidadeOrganica')),
            ],
            options={
                'db_table': 'departamento',
            },
        ),
        migrations.CreateModel(
            name='AtividadeTematica',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Atividade')),
                ('tematicaid', models.ForeignKey(db_column='TematicaID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Tematica')),
            ],
            options={
                'db_table': 'atividade_tematica',
            },
        ),
        migrations.CreateModel(
            name='AtividadeMaterial',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quantidade', models.IntegerField(blank=True, db_column='Quantidade', null=True)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Atividade')),
                ('materialid', models.ForeignKey(db_column='MaterialID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Material')),
            ],
            options={
                'db_table': 'atividade_material',
            },
        ),
        migrations.CreateModel(
            name='AtividadeDepartamento',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Atividade')),
                ('departamentoid', models.ForeignKey(db_column='DepartamentoID', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.Departamento')),
            ],
            options={
                'db_table': 'atividade_departamento',
            },
        ),
        migrations.AddField(
            model_name='atividade',
            name='localid',
            field=models.ForeignKey(blank=True, db_column='LocalID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Local'),
        ),
        migrations.AddField(
            model_name='atividade',
            name='unidadeorganicaid',
            field=models.ForeignKey(db_column='UnidadeOrganicaID', default='', on_delete=django.db.models.deletion.CASCADE, to='utilizadores.UnidadeOrganica'),
        ),
        migrations.AddField(
            model_name='atividade',
            name='utilizadorid',
            field=models.ForeignKey(db_column='UtilizadorID', default='', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='departamentoid',
            field=models.ForeignKey(blank=True, db_column='DepartamentoID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Departamento'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='inscriçãoid',
            field=models.ForeignKey(blank=True, db_column='InscriçãoID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Inscricao'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='registo_horárioid',
            field=models.ForeignKey(blank=True, db_column='Registo HorárioID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.RegistoHorrio'),
        ),
        migrations.AddField(
            model_name='utilizador',
            name='unidade_orgânicaid',
            field=models.ForeignKey(blank=True, db_column='Unidade OrgânicaID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.UnidadeOrganica'),
        ),
        migrations.CreateModel(
            name='UtilizadorTransporte',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('transporteid', models.ForeignKey(db_column='TransporteID', on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Transporte')),
            ],
            options={
                'db_table': 'utilizador_transporte',
                'unique_together': {('utilizadorid', 'transporteid')},
            },
        ),
        migrations.CreateModel(
            name='UtilizadorTarefa',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tarefaid', models.ForeignKey(db_column='TarefaID', on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Tarefa')),
            ],
            options={
                'db_table': 'utilizador_tarefa',
                'unique_together': {('utilizadorid', 'tarefaid')},
            },
        ),
        migrations.CreateModel(
            name='UtilizadorEmenta',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('ementaid', models.ForeignKey(db_column='EmentaID', on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Ementa')),
            ],
            options={
                'db_table': 'utilizador_ementa',
                'unique_together': {('utilizadorid', 'ementaid')},
            },
        ),
        migrations.CreateModel(
            name='UtilizadorAtividade',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('atividadeid', models.ForeignKey(db_column='AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Atividade')),
            ],
            options={
                'db_table': 'utilizador_atividade',
                'unique_together': {('utilizadorid', 'atividadeid')},
            },
        ),
        migrations.CreateModel(
            name='TarefaSessoAtividade',
            fields=[
                ('tarefaid', models.OneToOneField(db_column='TarefaID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='utilizadores.Tarefa')),
                ('sessão_atividadeid', models.ForeignKey(db_column='Sessão-AtividadeID', on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.SessaoAtividade')),
            ],
            options={
                'db_table': 'tarefa_sessão-atividade',
                'unique_together': {('tarefaid', 'sessão_atividadeid')},
            },
        ),
        migrations.CreateModel(
            name='InscrioEmenta',
            fields=[
                ('inscriçãoid', models.OneToOneField(db_column='InscriçãoID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='utilizadores.Inscricao')),
                ('ementaid', models.ForeignKey(db_column='EmentaID', on_delete=django.db.models.deletion.DO_NOTHING, to='utilizadores.Ementa')),
            ],
            options={
                'db_table': 'inscrição_ementa',
                'unique_together': {('inscriçãoid', 'ementaid')},
            },
        ),
        migrations.CreateModel(
            name='DiaAbertoUtilizador',
            fields=[
                ('dia_abertoid', models.OneToOneField(db_column='Dia AbertoID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='utilizadores.DiaAberto')),
                ('utilizadorid', models.ForeignKey(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dia aberto_utilizador',
                'unique_together': {('dia_abertoid', 'utilizadorid')},
            },
        ),
    ]
